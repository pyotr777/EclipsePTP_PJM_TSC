<?xml version="1.0" encoding="UTF-8"?>
<!-- ******************************************************************************* -->
<!-- * Copyright (c) 2015 RIKEN AICS All rights reserved. This program -->
<!-- * and the accompanying materials are made available under the terms of the -->
<!-- * Eclipse Public License v1.0 which accompanies this distribution, and is -->
<!-- * available at http://www.eclipse.org/legal/epl-v10.html -->
<!-- * -->
<!-- * Contributors: -->
<!-- * Peter Bryzgalov -->
<!-- ****************************************************************************** -->
<resource-manager-builder 
    xmlns="http://eclipse.org/ptp/rm" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://eclipse.org/ptp/rm http://eclipse.org/ptp/schemas/v1.1/rm.xsd" 
    name="PJM-Generic-MPI">
    <control-data>
        <!-- Set the default value of this attribute if PJM is installed in a non-standard location -->
        <attribute name="bindir" visible="false"/>
        <!-- This is a necessary attribute for the functioning of LML; link it to the batch-specific variable name -->
        <attribute name="control.queue.name" visible="false">
            <link-value-to>destination</link-value-to>
        </attribute>
        <attribute name="queues" visible="false"/>
        <attribute name="destination" type="string" visible="false">
            <description>Designation of the queue to which to submit the job.</description>
            <tooltip>Format: queue[@server].</tooltip>
        </attribute>
        
        <attribute name="mpiCommand" type="string">
            <description>Which MPI command to use</description>
            <default>mpiexec</default>
        </attribute>
        <attribute name="nodes" type="string">
            <description>The number of nodes and node shape allocated to job</description>
            <tooltip>node=N node=N1xN2 node=N1xN2xN3</tooltip>
            <default>1</default>
        </attribute>
        <attribute name="elapse" type="string">
            <description>Maximum executable time for a job</description>
            <tooltip>Format: [[hours:]minutes:]seconds[.milliseconds].</tooltip>
            <default>00:01:00</default>
            <validator>
                <regex expression="\d\d:\d\d:\d\d"/>
                <error-message>format must be hh:mm:ss</error-message>
            </validator>
        </attribute>
        <!-- Stage in -->
        <attribute name="useStageIn" type="boolean">
            <default>false</default>
        </attribute>
        <!-- File 1 -->
        <attribute name="stageinBasedir" type="string" />
        <attribute name="stgoutBasedir" type="string" />
        <attribute name="staginFile1Source" type="string">
            <description>Stage in Local file</description>
        </attribute>
        <attribute name="staginFile1Dst" type="string">
            <description>Remote directory</description>
            <default>./</default>
        </attribute>
        <attribute name="staginFile1Rank" type="string">
            <description>MPI ranks</description>
            <default>*</default>
        </attribute>
        <!-- File 2 -->
        <attribute name="staginFile2Source" type="string">
            <description>Local file for staging</description>
        </attribute>
        <attribute name="staginFile2Dst" type="string">
            <default>./</default>
        </attribute>
        <attribute name="staginFile2Rank" type="string">
            <default>*</default>
        </attribute>
        <!-- Dir 1 -->
        <attribute name="staginDir1Source" type="string">
            <description>Stage in Local directory</description>
            <default></default>
        </attribute>
        <attribute name="staginDir1Dst" type="string">
            <description>Remote directory</description>
            <default>./</default>
        </attribute>
        <attribute name="staginDir1Rank" type="string">
            <description>MPI ranks</description>
            <default>*</default>
        </attribute>
        <attribute name="staginDir1Recurs" type="string">
            <description>Recursive</description>
            <tooltip>Number of subdirectory levels to transfer</tooltip>
            <default>1</default>
        </attribute>
        <!-- Dir 2 -->
        <attribute name="staginDir2Source" type="string">
        </attribute>
        <attribute name="staginDir2Dst" type="string">
            <default>./</default>
        </attribute>
        <attribute name="staginDir2Rank" type="string">
            <default>*</default>
        </attribute>
        <attribute name="staginDir2Recurs" type="string">
            <default>1</default>
        </attribute>
        <!-- Stage out -->
        <attribute name="useStageOut" type="boolean">
            <default>false</default>
        </attribute>
        <!-- File 1 -->
        <attribute name="stgoutFile1Source" type="string">
            <description>Stage out Remote file</description>
        </attribute>
        <attribute name="stgoutFile1Dst" type="string">
            <description>Local directory</description>
            <default>./</default>
        </attribute>
        <attribute name="stgoutFile1Rank" type="string">
            <description>MPI ranks</description>
            <default>*</default>
        </attribute>
        <!-- File 2 -->
        <attribute name="stgoutFile2Source" type="string">
            <description>Stage out Remote file</description>
        </attribute>        
        <attribute name="stgoutFile2Dst" type="string">
            <default>./</default>
        </attribute>
        <attribute name="stgoutFile2Rank" type="string">
            <default>*</default>
        </attribute>
        <!-- Dir 1 -->
        <attribute name="stgoutDir1Source" type="string">
            <description>Stage out Remote directory</description>
            <default></default>
        </attribute>
        <attribute name="stgoutDir1Dst" type="string">
            <description>Local directory</description>
            <default>./</default>
        </attribute>
        <attribute name="stgoutDir1Rank" type="string">
            <description>MPI ranks</description>
            <default>*</default>
        </attribute>
        <attribute name="stgoutDir1Recurs" type="string">
            <description>Recursive</description>
            <tooltip>Number of subdirectory levels to transfer</tooltip>
            <default>1</default>
        </attribute>
        <!-- Dir 2 -->
        <attribute name="stgoutDir2Source" type="string">
        </attribute>
        <attribute name="stgoutDir2Dst" type="string">
            <default>./</default>
        </attribute>
        <attribute name="stgoutDir2Rank" type="string">
            <default>*</default>
        </attribute>
        <attribute name="stgoutDir2Recurs" type="string">
            <default>1</default>
        </attribute>        
        <!-- Arbitrary lines from Advanced tab -->
        <attribute name="arbitraryText1" type="string" />    
        <attribute name="arbitraryText2" type="string" />
        <attribute name="arbitraryText3" type="string" />  
        
        <script insertEnvironmentAfter="15">
            <file-staging-location>${ptp_rm:directory#value}</file-staging-location>
            <line>
                <arg>#! /bin/bash -x</arg>
            </line>
            <line>
                <arg>#PJM --rsc-list "rscgrp=${ptp_rm:destination#value}"</arg>
            </line>
            <line>
                <arg>#PJM --rsc-list "node=${ptp_rm:nodes#value}"</arg>
            </line>
            <line>
                <arg>#PJM --rsc-list "elapse=${ptp_rm:elapse#value}"</arg>
            </line>
            <line>
                <arg>#PJM --stg-transfiles "all"</arg>
            </line>
            <line>
                <arg>#PJM --mpi "use-rankdir"</arg>
            </line>
            <line>
                <arg>#PJM --stgin "rank=*</arg>
                <arg>${ptp_rm:executablePath#value}</arg>
                <arg>%r:./"</arg>
            </line>
            <line>
                <arg isUndefinedIfMatches="#PJM --stgin-basedir ">#PJM --stgin-basedir ${ptp_rm:staginBasedir#value}</arg>
            </line>
            <line>
                <arg isUndefinedIfMatches="#PJM --stgin .{1}rank=[*]*\s\s+.*">#PJM --stgin "rank=${ptp_rm:staginFile1Rank#value} ${ptp_rm:staginFile1Source#value} ${ptp_rm:staginFile1Dst#value}"</arg>
            </line>
            <line>
                <arg isUndefinedIfMatches="#PJM --stgin .{1}rank=[*]*\s\s+.*">#PJM --stgin "rank=${ptp_rm:staginFile2Rank#value} ${ptp_rm:staginFile2Source#value} ${ptp_rm:staginFile2Dst#value}"</arg>
            </line>
            <line>
                <arg isUndefinedIfMatches="#PJM --stgin-dir .{1}rank=[*]*\s\s+.*">#PJM --stgin-dir "rank=${ptp_rm:staginDir1Rank#value} ${ptp_rm:staginDir1Source#value} ${ptp_rm:staginDir1Dst#value} recursive=${ptp_rm:staginDir1Recurs#value}"</arg>
            </line> 
            <line>
                <arg isUndefinedIfMatches="#PJM --stgin-dir .{1}rank=[*]*\s\s+.*">#PJM --stgin-dir "rank=${ptp_rm:staginDir2Rank#value} ${ptp_rm:staginDir2Source#value} ${ptp_rm:staginDir2Dst#value} recursive=${ptp_rm:staginDir2Recurs#value}"</arg>
            </line>
            <line>
                <arg isUndefinedIfMatches="#PJM --stgout-basedir ">#PJM --stgout-basedir ${ptp_rm:stgoutBasedir#value}</arg>
            </line>
             <line>
                <arg isUndefinedIfMatches="#PJM --stgout .{1}rank=[*]*\s\s+.*">#PJM --stgout "rank=${ptp_rm:stgoutFile1Rank#value} ${ptp_rm:stgoutFile1Source#value} ${ptp_rm:stgoutFile1Dst#value}"</arg>
            </line>
            <line>
                <arg isUndefinedIfMatches="#PJM --stgout .{1}rank=[*]*\s\s+.*">#PJM --stgout "rank=${ptp_rm:stgoutFile2Rank#value} ${ptp_rm:stgoutFile2Source#value} ${ptp_rm:stgoutFile2Dst#value}"</arg>
            </line>
            <line>
                <arg isUndefinedIfMatches="#PJM --stgout-dir .{1}rank=[*]*\s\s+.*">#PJM --stgout-dir "rank=${ptp_rm:stgoutDir1Rank#value} ${ptp_rm:stgoutDir1Source#value} ${ptp_rm:stgoutDir1Dst#value}  recursive=${ptp_rm:stgoutDir1Recurs#value}"</arg>
            </line> 
            <line>
                <arg isUndefinedIfMatches="#PJM --stgout-dir .{1}rank=[*]*\s\s+.*">#PJM --stgout-dir "rank=${ptp_rm:stgoutDir2Rank#value} ${ptp_rm:stgoutDir2Source#value} ${ptp_rm:stgoutDir2Dst#value} recursive=${ptp_rm:stgoutDir2Recurs#value}"</arg>
            </line>
            <line>
                <arg isUndefinedIfMatches="">${ptp_rm:arbitraryText1#value}</arg>
            </line>
            <line>
                <arg isUndefinedIfMatches="">${ptp_rm:arbitraryText2#value}</arg>
            </line>
            <line>
                <arg isUndefinedIfMatches="">${ptp_rm:arbitraryText3#value}</arg>
            </line>
            <line>
                <arg>. /work/system/Env_base</arg>
            </line>
            <line>
                <arg>COMMAND=${ptp_rm:mpiCommand#value}</arg>               
            </line>
            <line><arg>EXEFILE=./`basename ${ptp_rm:executablePath#value}`</arg></line>
            <line>
                <arg resolve="false">${COMMAND}</arg>
                <arg resolve="false">${EXEFILE}</arg>
            </line>  
            <line>
                <arg>ls -la</arg>
            </line>                   
        </script>
            
        <start-up-command name="get-queues">
            <arg>${ptp_rm:bindir#value}pjstat</arg>
            <arg>--rsc</arg>
            <stdout-parser delim="\n">
                <target ref="queues">
                    <match>
                        <expression>([\d\w\[\],]+)\s*([\d\w\[\],]+)\s*(\w+)(\[\w+,\w+\])\s*([\d\w\[\],]+)\s*</expression>
                        <add field="value">
                            <entry valueGroup="3"/>             
                        </add>
                    </match>
                </target>
            </stdout-parser>
        </start-up-command>
        
        
        <submit-batch name="submit-batch" directory="${ptp_rm:directory#value}" waitForId="true" redirectStderr="true">
            <arg>pjsub</arg>
            <arg>${ptp_rm:managed_file_for_script#value}</arg>
            
            <stdout-parser delim="\n">
                <target ref="@jobId">
                    <match>
                        <expression>\[(.+)\]\s*PJM\s*\d+\s*[^\d]+([\d]+)\s*([\w]+).*</expression>
                        <append field="name">
                            <entry valueGroup="2"/>
                        </append>
                        <set field="default">
                            <entry valueGroup="2"/>
                        </set>
                        <set field="value">
                            <entry value="SUBMITTED"/>
                        </set>
                    </match>                    
                </target>
                <target ref="@jobId">
                    <match>
                        <expression flags="DOTALL|UNIX_LINES">\[ERR.*</expression>
                        <set field="value">
                            <entry value="FAILED"/>
                        </set>
                    </match>
                </target>
                <target ref="@jobId">
                    <match>
                        <expression flags="DOTALL|UNIX_LINES">(.+)</expression>
                        <set field="value">
                            <entry value="SUBMITTED"/>
                        </set>
                    </match>
                </target>
            </stdout-parser>
            <stderr-parser delim="\n">
                <target ref="@jobId">
                    <match>
                        <expression>\[ERR.*</expression>
                        <throw message="Job Submit Failed"/>
                    </match>
                </target>
            </stderr-parser>
        </submit-batch>        
        <get-job-status name="get-job-status" ignoreExitStatus="true">
            <arg>pjstat</arg>
            <arg>${ptp_rm:@jobId#name}</arg>
            <stdout-parser delim="\n">
                <target ref="@jobId">
                    <match>
                        <expression>^[0-9]+\s+[A-Za-z0-9\-]+\s+\w+\s+(\w+)\s+\w+\s+.+</expression>
                        <set field="value">
                            <entry valueGroup="1"/>
                        </set>
                    </match>
                    <test op="EQ">
                        <value>#value</value>
                        <value>QUE</value>
                        <set field="value">
                            <entry value="QUEUED_ACTIVE"/>
                        </set>
                    </test>
                    <test op="EQ">
                        <value>#value</value>
                        <value>SIN</value>
                        <set field="value">
                            <entry value="STAGING"/>
                        </set>
                    </test>
                    <test op="EQ">
                        <value>#value</value>
                        <value>RDY</value>
                        <set field="value">
                            <entry value="READY"/>
                        </set>
                    </test>
                    <test op="EQ">
                        <value>#value</value>
                        <value>RUN</value>
                        <set field="value">
                            <entry value="RUNNING"/>
                        </set>
                    </test>
                    <test op="EQ">
                        <value>#value</value>
                        <value>ERR</value>
                        <set field="value">
                            <entry value="SUSPENDED"/>
                        </set>
                    </test>
                    <test op="EQ">
                        <value>#value</value>
                        <value>RNO</value>
                        <set field="value">
                            <entry value="RUNNING"/>
                        </set>
                    </test>
                    <test op="EQ">
                        <value>#value</value>
                        <value>SOT</value>
                        <set field="value">
                            <entry value="STAGING_OUT"/>
                        </set>
                    </test>
                    <test op="EQ">
                        <value>#value</value>
                        <value>EXT</value>
                        <set field="value">
                            <entry value="COMPLETED"/>
                        </set>
                    </test>
                    <test op="EQ">
                        <value>#value</value>
                        <value>CCL</value>
                        <set field="value">
                            <entry value="COMPLETED"/>
                        </set>
                    </test>
                    <test op="EQ">
                        <value>#value</value>
                        <value>HLD</value>
                        <set field="value">
                            <entry value="SYSTEM_ON_HOLD"/>
                        </set>
                    </test>
                    <else>
                        <set field="value">
                            <entry value="COMPLETED"/>
                        </set>
                    </else>
                </target>
            </stdout-parser>
            <stderr-parser delim="\n">
                <target ref="@jobId">
                    <match>
                        <expression flags="DOTALL">.+</expression>
                        <set field="value">
                            <entry value="COMPLETED"/>
                        </set>
                    </match>
                </target>
            </stderr-parser>
        </get-job-status>

        <terminate-job name="cancel" ignoreExitStatus="true">
            <arg>${ptp_rm:bindir#value}pjdel</arg>
            <arg>${ptp_rm:@jobId#name}</arg>
        </terminate-job>
       
        <launch-tab>
             <!-- Basic tab -->
            <dynamic includeWidgetValuesFrom="Staging,Advanced">
                <title>Basic Settings</title>
                <layout>
                    <grid-layout/>
                </layout>
                <!-- QUEUES remote path group -->
                <composite group="true">
                    <layout>
                        <grid-layout numColumns="3" makeColumnsEqualWidth="false"/>
                    </layout>
                    <widget type="label" style="SWT.LEFT">
                        <layout-data>
                            <grid-data horizontalAlign="SWT.BEGINNING" verticalAlign="SWT.CENTER"/>
                        </layout-data>
                        <tooltip>${ptp_rm:destination#tooltip}</tooltip>
                        <fixed-text>Queue: </fixed-text>
                    </widget>
                    <widget type="combo" style="SWT.BORDER" readOnly="true" attribute="destination">
                        <layout-data>
                            <grid-data widthHint="150" horizontalAlign="SWT.FILL" verticalAlign="SWT.CENTER" horizontalSpan="2"/>
                        </layout-data>
                        <items-from>queues</items-from>
                    </widget>
                </composite>
                
                <!-- ATTRIBUTES group -->
                <composite group="true">
                    <layout>
                        <grid-layout numColumns="3" makeColumnsEqualWidth="false" horizontalSpacing="10" verticalSpacing="15"/>
                    </layout>
                    <!-- HEADER -->
                    <widget type="label" style="SWT.LEFT">
                        <layout-data>
                            <grid-data horizontalAlign="SWT.BEGINNING" verticalAlign="SWT.CENTER" grabExcessHorizontal="false"/>
                        </layout-data>
                        <fixed-text>Name</fixed-text>
                    </widget>
                    <widget type="label" style="SWT.LEFT">
                        <layout-data>
                            <grid-data horizontalAlign="SWT.BEGINNING" verticalAlign="SWT.CENTER" horizontalSpan="1" grabExcessHorizontal="false"/>
                        </layout-data>
                        <fixed-text>Value</fixed-text>
                    </widget>
                    <widget type="label" style="SWT.LEFT">
                        <layout-data>
                            <grid-data horizontalAlign="SWT.BEGINNING" verticalAlign="SWT.CENTER" grabExcessHorizontal="false"/>
                        </layout-data>
                        <fixed-text>Description</fixed-text>
                    </widget>
                    <!-- row 1 -->
                    <widget type="label" style="SWT.LEFT">
                        <layout-data>
                            <grid-data horizontalAlign="SWT.BEGINNING" verticalAlign="SWT.CENTER" grabExcessHorizontal="false"/>
                        </layout-data>
                        <tooltip>${ptp_rm:nodes#tooltip}</tooltip>
                        <fixed-text>Nodes: </fixed-text>
                    </widget>
                    <widget type="text" style="SWT.BORDER" attribute="nodes">
                        <layout-data>
                            <grid-data horizontalAlign="SWT.FILL" verticalAlign="SWT.CENTER" horizontalSpan="1" grabExcessHorizontal="false" widthHint="150"/>
                        </layout-data>
                    </widget>
                    <widget type="label" style="SWT.LEFT">
                        <layout-data>
                            <grid-data horizontalAlign="SWT.BEGINNING" verticalAlign="SWT.CENTER" grabExcessHorizontal="false"/>
                        </layout-data>
                        <fixed-text>${ptp_rm:nodes#description}</fixed-text>
                    </widget>
                    <!-- row 2 -->
                    <widget type="label" style="SWT.LEFT">
                        <layout-data>
                            <grid-data horizontalAlign="SWT.BEGINNING" verticalAlign="SWT.CENTER" grabExcessHorizontal="false"/>
                        </layout-data>
                        <tooltip>${ptp_rm:elapse#tooltip}</tooltip>
                        <fixed-text>Wallclock Time: </fixed-text>
                    </widget>
                    <widget type="text" style="SWT.BORDER" attribute="elapse">
                        <layout-data>
                            <grid-data horizontalAlign="SWT.FILL" verticalAlign="SWT.CENTER" horizontalSpan="1" grabExcessHorizontal="false" widthHint="150"/>
                        </layout-data>
                    </widget>
                    <widget type="label" style="SWT.LEFT">
                        <layout-data>
                            <grid-data horizontalAlign="SWT.BEGINNING" verticalAlign="SWT.CENTER" grabExcessHorizontal="false"/>
                        </layout-data>
                        <fixed-text>${ptp_rm:elapse#description}</fixed-text>
                    </widget>   
                    <!--  row 3 MPI Command -->
                    <widget type="label" style="SWT.LEFT">
                        <layout-data>
                            <grid-data horizontalAlign="SWT.BEGINNING" verticalAlign="SWT.CENTER" grabExcessHorizontal="false"/>
                        </layout-data>
                        <fixed-text>MPI Launch Command: </fixed-text>
                    </widget>
                    <widget type="text" style="SWT.BORDER" attribute="mpiCommand">
                        <layout-data>
                            <grid-data horizontalAlign="SWT.FILL" horizontalSpan="1" grabExcessHorizontal="false"/>
                        </layout-data>
                    </widget>
                    <widget type="label" style="SWT.LEFT">
                        <layout-data>
                            <grid-data horizontalAlign="SWT.BEGINNING" verticalAlign="SWT.CENTER" grabExcessHorizontal="false"/>
                        </layout-data>
                        <fixed-text>${ptp_rm:mpiCommand#description}</fixed-text>
                    </widget>
                </composite>

            </dynamic>
            
            <!-- Staging tab -->
            <dynamic includeWidgetValuesFrom="Basic Settings,Advanced">
                <title>Staging</title>
                <layout>
                    <grid-layout/>
                </layout>
                
                <!-- HEADER -->
                <composite group="true">
                    <layout>
                        <grid-layout numColumns="3" makeColumnsEqualWidth="false" horizontalSpacing="5" verticalSpacing="0" />
                    </layout>
                    <layout-data>
                        <grid-data horizontalAlign="SWT.LEFT"  verticalAlign="SWT.FILL"  grabExcessHorizontal="false" grabExcessVertical="false"/>
                    </layout-data>
                    <widget type="checkbox" title="Stage IN rules" buttonId="useStageInButton01" attribute="useStageIn">
                        <layout-data>
                            <grid-data horizontalAlign="SWT.LEFT" verticalAlign="SWT.CENTER" grabExcessHorizontal="false"/>
                        </layout-data>
                    </widget>
                </composite>
                
                <!--  STAGE IN group -->
                <!-- Basedir -->
                <composite group="true">
                    <layout>
                        <grid-layout numColumns="9" makeColumnsEqualWidth="false" horizontalSpacing="5" verticalSpacing="0" />
                    </layout>
                    <widget type="label" style="SWT.LEFT">
                        <layout-data>
                            <grid-data horizontalAlign="SWT.BEGINNING" verticalAlign="SWT.CENTER" horizontalSpan="1" grabExcessHorizontal="false"/>
                        </layout-data>
                        <fixed-text>Stage IN base directory:</fixed-text>
                    </widget>
                    <browse textStyle="SWT.BORDER" title="Browse" localOnly="true"  directory="true" attribute="stageinBasedir">
                        <text-layout-data>
                            <grid-data horizontalAlign="SWT.FILL" verticalAlign="SWT.CENTER" widthHint="200" grabExcessHorizontal="true" />
                        </text-layout-data>
                        <button-layout-data>
                            <grid-data horizontalAlign="SWT.FILL" verticalAlign="SWT.CENTER" widthHint="30" grabExcessHorizontal="false"/>
                        </button-layout-data>
                    </browse>
                    <control-state>
                        <hide-if button="useStageInButton01" selected="false"/>
                    </control-state>
                </composite>
                <!-- File 1 -->
                <composite group="true">
                    <layout>
                        <grid-layout numColumns="9" makeColumnsEqualWidth="false" horizontalSpacing="5" verticalSpacing="0" />
                    </layout>                    
                    <widget type="label" style="SWT.LEFT">
                        <layout-data>
                            <grid-data horizontalAlign="SWT.BEGINNIG" verticalAlign="SWT.CENTER" grabExcessHorizontal="false" />
                        </layout-data>
                        <fixed-text>${ptp_rm:staginFile1Source#description}:</fixed-text>
                    </widget>
                    <browse textStyle="SWT.BORDER" title="Browse" localOnly="true" attribute="staginFile1Source">
                        <text-layout-data>
                            <grid-data horizontalAlign="SWT.FILL" verticalAlign="SWT.CENTER" widthHint="200" grabExcessHorizontal="true" />
                        </text-layout-data>
                        <button-layout-data>
                            <grid-data horizontalAlign="SWT.FILL" verticalAlign="SWT.CENTER" widthHint="30" grabExcessHorizontal="false"/>
                        </button-layout-data>
                    </browse>
                    <!-- rank -->
                    <widget type="label" style="SWT.LEFT">
                        <fixed-text>${ptp_rm:staginFile1Rank#description}:</fixed-text>
                    </widget>
                    <widget type="text" style="SWT.BORDER" attribute="staginFile1Rank">
                        <layout-data>
                            <grid-data horizontalAlign="SWT.FILL" verticalAlign="SWT.CENTER" horizontalSpan="1" grabExcessHorizontal="false" widthHint="30"/>
                        </layout-data>
                    </widget>
                    <!-- destination -->
                    <widget type="label" style="SWT.LEFT">
                        <fixed-text>${ptp_rm:staginFile1Dst#description}:</fixed-text>
                    </widget>
                    <widget type="text" style="SWT.BORDER" attribute="staginFile1Dst">
                        <layout-data>
                            <grid-data horizontalAlign="SWT.FILL" verticalAlign="SWT.CENTER" horizontalSpan="1" grabExcessHorizontal="false" widthHint="150"/>
                        </layout-data>
                    </widget>
                    <control-state>
                        <hide-if button="useStageInButton01" selected="false"/>
                    </control-state>
                </composite>
                <!-- File 2 -->
                <composite group="true">
                    <layout>
                        <grid-layout numColumns="9" makeColumnsEqualWidth="false" horizontalSpacing="5" verticalSpacing="0" />
                    </layout>
                    <widget type="label" style="SWT.LEFT">
                        <layout-data>
                            <grid-data horizontalAlign="SWT.BEGINNIG" verticalAlign="SWT.CENTER" grabExcessHorizontal="false" />
                        </layout-data>
                        <fixed-text>${ptp_rm:staginFile1Source#description}:</fixed-text>
                    </widget>
                    <browse textStyle="SWT.BORDER" title="Browse" localOnly="true" attribute="staginFile2Source">
                        <text-layout-data>
                            <grid-data horizontalAlign="SWT.FILL" verticalAlign="SWT.CENTER" widthHint="200" grabExcessHorizontal="true" />                         
                        </text-layout-data>
                        <button-layout-data>
                            <grid-data horizontalAlign="SWT.FILL" verticalAlign="SWT.CENTER" widthHint="30" grabExcessHorizontal="false"/>
                        </button-layout-data>
                    </browse>
                     <!-- rank -->
                    <widget type="label" style="SWT.LEFT">
                        <fixed-text>${ptp_rm:staginFile1Rank#description}:</fixed-text>
                    </widget>
                    <widget type="text" style="SWT.BORDER" attribute="staginFile2Rank">
                        <layout-data>
                            <grid-data horizontalAlign="SWT.FILL" verticalAlign="SWT.CENTER" horizontalSpan="1" grabExcessHorizontal="false" widthHint="30"/>
                        </layout-data>
                    </widget>
                    <!-- destination -->
                    <widget type="label" style="SWT.LEFT">
                        <fixed-text>${ptp_rm:staginFile1Dst#description}:</fixed-text>
                    </widget>
                    <widget type="text" style="SWT.BORDER" attribute="staginFile2Dst">
                        <layout-data>
                            <grid-data horizontalAlign="SWT.FILL" verticalAlign="SWT.CENTER" horizontalSpan="1" grabExcessHorizontal="false" widthHint="150"/>
                        </layout-data>
                    </widget>
                    <control-state>
                        <hide-if button="useStageInButton01" selected="false"/>
                    </control-state>
                </composite>
                
                <!--  STAGE IN DIR group -->
                <!-- Dir 1 -->
                <composite group="true">
                    <layout>
                        <grid-layout numColumns="9" makeColumnsEqualWidth="false" horizontalSpacing="5" verticalSpacing="0" />
                    </layout>
                    <widget type="label" style="SWT.LEFT">
                        <layout-data>
                            <grid-data horizontalAlign="SWT.BEGINNIG" verticalAlign="SWT.CENTER" grabExcessHorizontal="false" />
                        </layout-data>
                        <fixed-text>${ptp_rm:staginDir1Source#description}: </fixed-text>
                    </widget>
                    <browse textStyle="SWT.BORDER" title="Browse" localOnly="true" directory="true" attribute="staginDir1Source">
                        <text-layout-data>
                            <grid-data horizontalAlign="SWT.FILL" verticalAlign="SWT.CENTER" widthHint="150" grabExcessHorizontal="true" />                         
                        </text-layout-data>
                        <button-layout-data>
                            <grid-data horizontalAlign="SWT.FILL" verticalAlign="SWT.CENTER" widthHint="30" grabExcessHorizontal="false"/>
                        </button-layout-data>
                    </browse>
                    <!-- rank -->
                    <widget type="label" style="SWT.LEFT">
                        <fixed-text>${ptp_rm:staginDir1Rank#description}: </fixed-text>
                    </widget>
                    <widget type="text" style="SWT.BORDER" attribute="staginDir1Rank">
                        <layout-data>
                            <grid-data horizontalAlign="SWT.FILL" verticalAlign="SWT.CENTER" horizontalSpan="1" grabExcessHorizontal="false" widthHint="30"/>
                        </layout-data>
                    </widget>
                    <!-- destination -->
                    <widget type="label" style="SWT.LEFT">
                        <fixed-text>${ptp_rm:staginDir1Dst#description}: </fixed-text>
                    </widget>
                    <widget type="text" style="SWT.BORDER" attribute="staginDir1Dst">
                        <layout-data>
                            <grid-data horizontalAlign="SWT.FILL" verticalAlign="SWT.CENTER" horizontalSpan="1" grabExcessHorizontal="false" widthHint="150"/>
                        </layout-data>
                    </widget>
                    <!-- Recursion -->
                    <widget type="label" style="SWT.LEFT">
                        <layout-data>
                            <grid-data horizontalAlign="SWT.BEGINNING" verticalAlign="SWT.CENTER" grabExcessHorizontal="false"/>
                        </layout-data>                                                
                        <tooltip>${ptp_rm:staginDir1Recurs#tooltip}</tooltip>
                        <fixed-text>${ptp_rm:staginDir1Recurs#description}: </fixed-text>
                    </widget>
                    <widget type="text" style="SWT.BORDER" attribute="staginDir1Recurs">
                        <layout-data>
                            <grid-data horizontalAlign="SWT.FILL" verticalAlign="SWT.CENTER" horizontalSpan="1" grabExcessHorizontal="false" widthHint="30" />
                        </layout-data>
                    </widget>
                    <control-state>
                        <hide-if button="useStageInButton01" selected="false"/>
                    </control-state>
                </composite>
                <!-- Dir 2 -->
                <composite group="true">
                    <layout>
                        <grid-layout numColumns="9" makeColumnsEqualWidth="false" horizontalSpacing="5" verticalSpacing="0" />
                    </layout>
                    <widget type="label" style="SWT.LEFT">
                        <layout-data>
                            <grid-data horizontalAlign="SWT.BEGINNIG" verticalAlign="SWT.CENTER" grabExcessHorizontal="false" />
                        </layout-data>
                        <fixed-text>${ptp_rm:staginDir1Source#description}: </fixed-text>
                    </widget>
                    <browse textStyle="SWT.BORDER" title="Browse" localOnly="true" directory="true" attribute="staginDir2Source">
                        <text-layout-data>
                            <grid-data horizontalAlign="SWT.FILL" verticalAlign="SWT.CENTER" widthHint="150" grabExcessHorizontal="true" />                         
                        </text-layout-data>
                        <button-layout-data>
                            <grid-data horizontalAlign="SWT.FILL" verticalAlign="SWT.CENTER" widthHint="30" grabExcessHorizontal="false"/>
                        </button-layout-data>
                    </browse>
                    <!-- rank -->
                    <widget type="label" style="SWT.LEFT">
                        <fixed-text>${ptp_rm:staginDir1Rank#description}: </fixed-text>
                    </widget>
                    <widget type="text" style="SWT.BORDER" attribute="staginDir2Rank">
                        <layout-data>
                            <grid-data horizontalAlign="SWT.FILL" verticalAlign="SWT.CENTER" horizontalSpan="1" grabExcessHorizontal="false" widthHint="30"/>
                        </layout-data>
                    </widget>
                    <!-- destination -->
                    <widget type="label" style="SWT.LEFT">
                        <fixed-text>${ptp_rm:staginDir1Dst#description}: </fixed-text>
                    </widget>
                    <widget type="text" style="SWT.BORDER" attribute="staginDir2Dst">
                        <layout-data>
                            <grid-data horizontalAlign="SWT.FILL" verticalAlign="SWT.CENTER" horizontalSpan="1" grabExcessHorizontal="false" widthHint="150"/>
                        </layout-data>
                    </widget>
                    <!-- Recursion -->
                    <widget type="label" style="SWT.LEFT">
                        <layout-data>
                            <grid-data horizontalAlign="SWT.BEGINNING" verticalAlign="SWT.CENTER" grabExcessHorizontal="false"/>
                        </layout-data>                                                
                        <tooltip>${ptp_rm:staginDir1Recurs#tooltip}</tooltip>
                        <fixed-text>${ptp_rm:staginDir1Recurs#description}: </fixed-text>
                    </widget>
                    <widget type="text" style="SWT.BORDER" attribute="staginDir2Recurs">
                        <layout-data>
                            <grid-data horizontalAlign="SWT.FILL" verticalAlign="SWT.CENTER" horizontalSpan="1" grabExcessHorizontal="false" widthHint="30" />
                        </layout-data>
                    </widget>
                    <control-state>
                        <hide-if button="useStageInButton01" selected="false"/>
                    </control-state>
                </composite>
                
                <!--  STAGE OUT  group -->
                <!-- HEADER -->
                <composite group="true">
                    <layout>
                        <grid-layout numColumns="3" makeColumnsEqualWidth="false" horizontalSpacing="5" verticalSpacing="0" />
                    </layout>
                    <layout-data>
                        <grid-data horizontalAlign="SWT.LEFT"  verticalAlign="SWT.FILL"  grabExcessHorizontal="false" grabExcessVertical="false"/>
                    </layout-data>
                    <widget type="checkbox" title="Stage OUT rules" buttonId="useStageOutButton01" attribute="useStageOut">
                        <layout-data>
                            <grid-data horizontalAlign="SWT.LEFT" verticalAlign="SWT.CENTER" grabExcessHorizontal="false"/>
                        </layout-data>
                    </widget>
                </composite>
                
                <!-- Basedir -->
                <composite group="true">
                    <layout>
                        <grid-layout numColumns="9" makeColumnsEqualWidth="false" horizontalSpacing="10" verticalSpacing="0" />
                    </layout>
                    <widget type="label" style="SWT.LEFT">
                        <layout-data>
                            <grid-data horizontalAlign="SWT.BEGINNING" verticalAlign="SWT.CENTER" horizontalSpan="1" grabExcessHorizontal="false" />
                        </layout-data>
                        <fixed-text>Stage OUT base directory:</fixed-text>
                    </widget>
                    <browse textStyle="SWT.BORDER" title="Browse" directory="true" attribute="stgoutBasedir">
                        <text-layout-data>
                            <grid-data horizontalAlign="SWT.FILL" verticalAlign="SWT.CENTER" widthHint="200" grabExcessHorizontal="true" />
                        </text-layout-data>
                        <button-layout-data>
                            <grid-data horizontalAlign="SWT.FILL" verticalAlign="SWT.CENTER" widthHint="30" grabExcessHorizontal="false" />
                        </button-layout-data>
                    </browse>
                    <control-state>
                        <hide-if button="useStageOutButton01" selected="false"/>
                    </control-state>
                </composite>
                <!-- File 1 -->
                <composite group="true">
                    <layout>
                        <grid-layout numColumns="9" makeColumnsEqualWidth="false" horizontalSpacing="5" verticalSpacing="0" />
                    </layout>                    
                    <widget type="label" style="SWT.LEFT">
                        <layout-data>
                            <grid-data horizontalAlign="SWT.BEGINNIG" verticalAlign="SWT.CENTER" grabExcessHorizontal="false" />
                        </layout-data>
                        <fixed-text>${ptp_rm:stgoutFile1Source#description}: </fixed-text>
                    </widget>
                    <browse textStyle="SWT.BORDER" title="Browse" attribute="stgoutFile1Source">
                        <text-layout-data>
                            <grid-data horizontalAlign="SWT.FILL" verticalAlign="SWT.CENTER" widthHint="200" grabExcessHorizontal="true" />                         
                        </text-layout-data>
                        <button-layout-data>
                            <grid-data horizontalAlign="SWT.FILL" verticalAlign="SWT.CENTER" widthHint="30" grabExcessHorizontal="false"/>
                        </button-layout-data>
                    </browse>
                    <!-- rank -->
                    <widget type="label" style="SWT.LEFT">
                        <fixed-text>${ptp_rm:stgoutFile1Rank#description}: </fixed-text>
                    </widget>
                    <widget type="text" style="SWT.BORDER" attribute="stgoutFile1Rank">
                        <layout-data>
                            <grid-data horizontalAlign="SWT.FILL" verticalAlign="SWT.CENTER" horizontalSpan="1" grabExcessHorizontal="false" widthHint="30"/>
                        </layout-data>
                    </widget>
                    <!-- destination -->
                    <widget type="label" style="SWT.LEFT">
                        <fixed-text>${ptp_rm:stgoutFile1Dst#description}: </fixed-text>
                    </widget>
                    <widget type="text" style="SWT.BORDER" attribute="stgoutFile1Dst">
                        <layout-data>
                            <grid-data horizontalAlign="SWT.FILL" verticalAlign="SWT.CENTER" horizontalSpan="1" grabExcessHorizontal="false" widthHint="150"/>
                        </layout-data>
                    </widget>
                    <control-state>
                        <hide-if button="useStageOutButton01" selected="false"/>
                    </control-state>
                </composite>
                <!-- File 2 -->
                <composite group="true">
                    <layout>
                        <grid-layout numColumns="9" makeColumnsEqualWidth="false" horizontalSpacing="5" verticalSpacing="5" />
                    </layout>
                    <widget type="label" style="SWT.LEFT">
                        <layout-data>
                            <grid-data horizontalAlign="SWT.BEGINNIG" verticalAlign="SWT.CENTER" grabExcessHorizontal="false" />
                        </layout-data>
                        <fixed-text>${ptp_rm:stgoutFile1Source#description}: </fixed-text>
                    </widget>
                    <browse textStyle="SWT.BORDER" title="Browse" attribute="stgoutFile2Source">
                        <text-layout-data>
                            <grid-data horizontalAlign="SWT.FILL" verticalAlign="SWT.CENTER" widthHint="200" grabExcessHorizontal="true" />                         
                        </text-layout-data>
                        <button-layout-data>
                            <grid-data horizontalAlign="SWT.FILL" verticalAlign="SWT.CENTER" widthHint="30" grabExcessHorizontal="false"/>
                        </button-layout-data>
                    </browse>
                     <!-- rank -->
                    <widget type="label" style="SWT.LEFT">
                        <fixed-text>${ptp_rm:stgoutFile1Rank#description}: </fixed-text>
                    </widget>
                    <widget type="text" style="SWT.BORDER" attribute="stgoutFile2Rank">
                        <layout-data>
                            <grid-data horizontalAlign="SWT.FILL" verticalAlign="SWT.CENTER" horizontalSpan="1" grabExcessHorizontal="false" widthHint="30"/>
                        </layout-data>
                    </widget>
                    <!-- destination -->
                    <widget type="label" style="SWT.LEFT">
                        <fixed-text>${ptp_rm:stgoutFile1Dst#description}: </fixed-text>
                    </widget>
                    <widget type="text" style="SWT.BORDER" attribute="stgoutFile2Dst">
                        <layout-data>
                            <grid-data horizontalAlign="SWT.FILL" verticalAlign="SWT.CENTER" horizontalSpan="1" grabExcessHorizontal="false" widthHint="150"/>
                        </layout-data>
                    </widget>
                    <control-state>
                        <hide-if button="useStageOutButton01" selected="false"/>
                    </control-state>
                </composite>
                
                <!--  STAGE DIR group -->
                <!-- Dir 1 -->
                <composite group="true">
                    <layout>
                        <grid-layout numColumns="9" makeColumnsEqualWidth="false" horizontalSpacing="5" verticalSpacing="5" />
                    </layout>
                    <widget type="label" style="SWT.LEFT">
                        <layout-data>
                            <grid-data horizontalAlign="SWT.BEGINNIG" verticalAlign="SWT.CENTER" grabExcessHorizontal="false" />
                        </layout-data>
                        <fixed-text>${ptp_rm:stgoutDir1Source#description}: </fixed-text>
                    </widget>
                    <browse textStyle="SWT.BORDER" title="Browse" directory="true" attribute="stgoutDir1Source">
                        <text-layout-data>
                            <grid-data horizontalAlign="SWT.FILL" verticalAlign="SWT.CENTER" widthHint="150" grabExcessHorizontal="true" />                         
                        </text-layout-data>
                        <button-layout-data>
                            <grid-data horizontalAlign="SWT.FILL" verticalAlign="SWT.CENTER" widthHint="30" grabExcessHorizontal="false"/>
                        </button-layout-data>
                    </browse>
                    <!-- rank -->
                    <widget type="label" style="SWT.LEFT">
                        <fixed-text>${ptp_rm:stgoutDir1Rank#description}: </fixed-text>
                    </widget>
                    <widget type="text" style="SWT.BORDER" attribute="stgoutDir1Rank">
                        <layout-data>
                            <grid-data horizontalAlign="SWT.FILL" verticalAlign="SWT.CENTER" horizontalSpan="1" grabExcessHorizontal="false" widthHint="30"/>
                        </layout-data>
                    </widget>
                    <!-- destination -->
                    <widget type="label" style="SWT.LEFT">
                        <fixed-text>${ptp_rm:stgoutDir1Dst#description}: </fixed-text>
                    </widget>
                    <widget type="text" style="SWT.BORDER" attribute="stgoutDir1Dst">
                        <layout-data>
                            <grid-data horizontalAlign="SWT.FILL" verticalAlign="SWT.CENTER" horizontalSpan="1" grabExcessHorizontal="false" widthHint="150"/>
                        </layout-data>
                    </widget>
                    <!-- Recursion -->
                    <widget type="label" style="SWT.LEFT">
                        <layout-data>
                            <grid-data horizontalAlign="SWT.BEGINNING" verticalAlign="SWT.CENTER" grabExcessHorizontal="false"/>
                        </layout-data>                                                
                        <tooltip>${ptp_rm:stgoutDir1Recurs#tooltip}</tooltip>
                        <fixed-text>${ptp_rm:stgoutDir1Recurs#description}: </fixed-text>
                    </widget>
                    <widget type="text" style="SWT.BORDER" attribute="stgoutDir1Recurs">
                        <layout-data>
                            <grid-data horizontalAlign="SWT.FILL" verticalAlign="SWT.CENTER" horizontalSpan="1" grabExcessHorizontal="false" widthHint="30" />
                        </layout-data>
                    </widget>
                    <control-state>
                        <hide-if button="useStageOutButton01" selected="false"/>
                    </control-state>
                </composite>
                <!-- Dir 2 -->
                <composite group="true">
                    <layout>
                        <grid-layout numColumns="9" makeColumnsEqualWidth="false" horizontalSpacing="5" verticalSpacing="5" />
                    </layout>
                    <widget type="label" style="SWT.LEFT">
                        <layout-data>
                            <grid-data horizontalAlign="SWT.BEGINNIG" verticalAlign="SWT.CENTER" grabExcessHorizontal="false" />
                        </layout-data>
                        <fixed-text>${ptp_rm:stgoutDir1Source#description}: </fixed-text>
                    </widget>
                    <browse textStyle="SWT.BORDER" title="Browse" directory="true" attribute="stgoutDir2Source">
                        <text-layout-data>
                            <grid-data horizontalAlign="SWT.FILL" verticalAlign="SWT.CENTER" widthHint="150" grabExcessHorizontal="true" />                         
                        </text-layout-data>
                        <button-layout-data>
                            <grid-data horizontalAlign="SWT.FILL" verticalAlign="SWT.CENTER" widthHint="30" grabExcessHorizontal="false"/>
                        </button-layout-data>
                    </browse>
                    <!-- rank -->
                    <widget type="label" style="SWT.LEFT">
                        <fixed-text>${ptp_rm:stgoutDir1Rank#description}: </fixed-text>
                    </widget>
                    <widget type="text" style="SWT.BORDER" attribute="stgoutDir2Rank">
                        <layout-data>
                            <grid-data horizontalAlign="SWT.FILL" verticalAlign="SWT.CENTER" horizontalSpan="1" grabExcessHorizontal="false" widthHint="30"/>
                        </layout-data>
                    </widget>
                    <!-- destination -->
                    <widget type="label" style="SWT.LEFT">
                        <fixed-text>${ptp_rm:stgoutDir1Dst#description}: </fixed-text>
                    </widget>
                    <widget type="text" style="SWT.BORDER" attribute="stgoutDir2Dst">
                        <layout-data>
                            <grid-data horizontalAlign="SWT.FILL" verticalAlign="SWT.CENTER" horizontalSpan="1" grabExcessHorizontal="false" widthHint="150"/>
                        </layout-data>
                    </widget>
                    <!-- Recursion -->
                    <widget type="label" style="SWT.LEFT">
                        <layout-data>
                            <grid-data horizontalAlign="SWT.BEGINNING" verticalAlign="SWT.CENTER" grabExcessHorizontal="false"/>
                        </layout-data>
                        <tooltip>${ptp_rm:stgoutDir1Recurs#tooltip}</tooltip>
                        <fixed-text>${ptp_rm:stgoutDir1Recurs#description}: </fixed-text>
                    </widget>
                    <widget type="text" style="SWT.BORDER" attribute="stgoutDir2Recurs">
                        <layout-data>
                            <grid-data horizontalAlign="SWT.FILL" verticalAlign="SWT.CENTER" horizontalSpan="1" grabExcessHorizontal="false" widthHint="30" />
                        </layout-data>
                    </widget>
                    <control-state>
                        <hide-if button="useStageOutButton01" selected="false"/>
                    </control-state>
                </composite>
            </dynamic>
            
            <!-- Advanced tab -->
            <dynamic includeWidgetValuesFrom="Basic Settings,Staging">
                <title>Advanced</title>
                <layout>
                    <grid-layout/>
                </layout>
                <composite group="true">
                    <layout>
                        <grid-layout numColumns="1" makeColumnsEqualWidth="false"  horizontalSpacing="10" verticalSpacing="5"/>
                    </layout>
                    <layout-data>
                        <grid-data horizontalAlign="SWT.FILL"  verticalAlign="SWT.FILL"  grabExcessHorizontal="true" grabExcessVertical="true"/>
                    </layout-data>
                    <widget type="label" style="SWT.LEFT">
                        <fixed-text>Arbitrary lines to add to job script: </fixed-text>
                    </widget>
                    <widget type="text" style="SWT.BORDER" attribute="arbitraryText1">
                        <layout-data>
                            <grid-data horizontalAlign="SWT.FILL" verticalAlign="SWT.FILL" grabExcessHorizontal="false" widthHint="400" grabExcessVertical="false"/>
                        </layout-data>
                    </widget>
                    <widget type="text" style="SWT.BORDER" attribute="arbitraryText2">
                        <layout-data>
                            <grid-data horizontalAlign="SWT.FILL" verticalAlign="SWT.FILL" grabExcessHorizontal="false" widthHint="400" grabExcessVertical="false"/>
                        </layout-data>
                    </widget>
                    <widget type="text" style="SWT.BORDER" attribute="arbitraryText3">
                        <layout-data>
                            <grid-data horizontalAlign="SWT.FILL" verticalAlign="SWT.FILL" grabExcessHorizontal="false" widthHint="400" grabExcessVertical="false"/>
                        </layout-data>
                    </widget>
                </composite>
            </dynamic>
            
            <!--  Import tab -->
            <import title="Import PJM Script">
                <export-for-override name="exportedEnv" style="SWT.BORDER | SWT.MULTI | SWT.V_SCROLL" sort="true" type="table"
                    initialAllChecked="true" tooltipEnabled="true">
                    <layout-data>
                        <grid-data horizontalAlign="SWT.FILL" verticalAlign="SWT.CENTER" grabExcessHorizontal="true" heightHint="80"/>
                    </layout-data>
                    <column-data name="Name" width="175" resizable="true">
                        <tooltip>Multi-select and click checkbox to apply change to all rows.</tooltip>
                    </column-data>
                    <column-data name="Value" width="200" resizable="true">
                        <tooltip>Click to activate value widget.</tooltip>
                    </column-data>
                    <items>
                        <include>destination</include>
                        <include>nodes</include>
                        <include>elapse</include>
                        <include>executable</include>
                    </items>
                </export-for-override>
            </import>
        </launch-tab>
    </control-data> 
    <monitor-data schedulerType="PJM" refreshFrequencyInSeconds="120">        
    </monitor-data>
</resource-manager-builder>